{"version":3,"sources":["store/ducks/user.js","config/firebase.js","pages/Login/index.js","pages/SignUp/index.js","pages/Home/index.js","pages/StartWash/index.js","pages/PauseWash/index.js","routes/index.js","App.js","config/ReactotronConfig.js","store/ducks/index.js","store/index.js","index.js"],"names":["Types","initialState","user","state","action","type","payload","data","Creators","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","dispatch","useDispatch","history","useHistory","useState","isLoading","setIsLoading","email","setEmail","password","setPassword","db","firestore","handleLogin","useCallback","auth","signInWithEmailAndPassword","then","collection","where","currentUser","uid","get","querySnapshot","forEach","doc","UserActions","localStorage","setItem","JSON","stringify","push","catch","className","id","value","onChange","e","target","placeholder","Spinner","animation","variant","onClick","to","href","SignUp","formData","setFormData","handleSignup","preventDefault","name","unit","adminPassword","toast","error","createUserWithEmailAndPassword","result","add","created","Date","code","warn","handleInputChange","Form","Group","as","Row","Label","Control","passwordConfirmation","Button","Home","useSelector","washOneHistory","setWashOneHistory","washTwoHistory","setWashTwoHistory","machineOneStatus","setMachineOneStatus","machineTwoStatus","setMachineTwoStatus","fetchHistoryFromMachineOne","query","docs","length","users","find","oldState","date","moment","toDate","format","userParsed","fetchHistoryFromMachineTwo","fecthMachinesStatus","machine","machineData","in_use","useEffect","unsubscribeWashes","onSnapshot","unsubscribeMachines","wash","Card","Header","Body","Table","striped","bordered","hover","map","idx","initial_kwh","final_kwh","initial_water","final_water","StartWash","selectedMachine","setSelectedMachine","machinesList","setMachinesList","fetchMachinesList","machinesArray","parseInt","orderBy","limit","unsubscribe","disabled","ref","update","success","setTimeout","useParams","updated","Routes","getItem","parse","exact","path","PauseWash","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reactotron","Reactotron","configure","use","reactotronRedux","connect","yeOldeConsoleLog","console","log","args","display","preview","combineReducers","store","createStore","reducers","createEnhancer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61bf5f04.chunk.js","sourcesContent":["// Action Types\nexport const Types = {\n  SET_USER_DATA: 'user/SET_USER_DATA',\n};\n\n\n// Reducer\nconst initialState = {\n  user: {}\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.SET_USER_DATA:\n      return {\n        ...state,\n        user: action.payload.data\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n\n\n// Action Creators\nexport const Creators = {\n  setUserData: (data) => ({\n    type: Types.SET_USER_DATA,\n    payload: { data },\n  }),\n};\n","import firebase from 'firebase'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDF6_nwZ3S0DOqQfQmotDsK57KSaQ4MkbA\",\n  authDomain: \"laundry-sky.firebaseapp.com\",\n  databaseURL: \"https://laundry-sky.firebaseio.com\",\n  projectId: \"laundry-sky\",\n  storageBucket: \"laundry-sky.appspot.com\",\n  messagingSenderId: \"928149548505\",\n  appId: \"1:928149548505:web:a669c34c03511b072ebdc8\"\n};\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","import React, { useCallback, useState } from \"react\";\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Creators as UserActions } from '../../store/ducks/user'\n\nimport firebase from '../../config/firebase'\nimport 'firebase/auth'\n\nimport './login.css'\n\nfunction Login() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n  const [email,setEmail] = useState(\"\")\n  const [password,setPassword] = useState(\"\")\n  const db = firebase.firestore()\n\n\n  const handleLogin = useCallback(() => {\n    setIsLoading(true)\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(() => {\n        db.collection('users').where('id', '==', firebase.auth().currentUser.uid).get()\n        .then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            dispatch(UserActions.setUserData(doc.data()))\n            localStorage.setItem('laundrySky@user', JSON.stringify(doc.data()))\n            history.push('/home')\n          })\n        }).catch(() => {\n          setIsLoading(false)\n        })\n      }).catch(() => {\n        setIsLoading(false)\n      })\n  }, [email, password, db, dispatch, history])\n\n  return (\n    <div className=\"login-content d-flex align-items-center\">\n      <form className=\"form-signin mx-auto\">\n        <div className=\"text-center mb-4\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-white font-weight-bold\">Login</h1>\n        </div>\n\n          <input\n            type=\"email\"\n            id=\"inputEmail\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"form-control my-2\"\n            placeholder=\"Email\"\n          />\n\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"inputPassword\"\n            className=\"form-control my-2\"\n            placeholder=\"Senha\"\n          />\n\n        {\n          isLoading ? (\n            <Spinner animation=\"border\" variant=\"light\"/>\n          ) : (\n            <button className=\"btn btn-lg btn-primary btn-block btn-login\" type=\"button\" onClick={handleLogin}>\n              Entrar\n            </button>\n          )\n        }\n\n        <div className=\"login-options mt-5 text-center\">\n          <Link to=\"/signup\" className=\"mx-2\">Criar Conta</Link>\n          <span className=\"text-white\">&#9733;</span>\n          <a href=\"#\" className=\"mx-2\">Recuperar Senha</a>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useCallback, useState } from \"react\";\nimport { Form, Button, Row, Spinner } from \"react-bootstrap\";\nimport { toast } from 'react-toastify'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Creators as UserActions } from '../../store/ducks/user'\n\nimport firebase from \"../../config/firebase\";\nimport '@firebase/firestore'\nimport \"firebase/auth\";\n\nimport \"./signup.css\";\n\nfunction SignUp() {\n  const [formData, setFormData] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n  const dispatch = useDispatch()\n  const db = firebase.firestore()\n  const history = useHistory()\n\n  const handleSignup = useCallback((e) => {\n    e.preventDefault()\n\n    const { name, email, password, unit, adminPassword } = formData\n\n    if (adminPassword !== 'skystudios@2020') {\n      toast.error('Senha do administrador incorreta')\n    } else {\n      setIsLoading(true)\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(result => {\n        db.collection('users').add({\n          id: result.user.uid,\n          name,\n          email,\n          unit,\n          created: new Date()\n        })\n\n        dispatch(UserActions.setUserData({\n          name,\n          email,\n          unit\n        }))\n\n        setIsLoading(false)\n        history.push('/home')\n      }).catch(e => {\n        setIsLoading(false)\n        if(e.code === 'auth/email-already-in-use'){\n          toast.warn('Email já cadastrado, por favor utilize outro')\n        } else if(e.code === 'auth/weak-passwordc'){\n          toast.warn('A senha deve conter mais de 6 digitos')\n        }\n      })\n    }\n  }, [formData, db]);\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <div className=\"login-content d-flex align-items-center\">\n      <Form className=\"mx-auto\">\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Nome</Form.Label>\n          <Form.Control value={formData.name} onChange={handleInputChange} name=\"name\" type=\"text\" placeholder=\"Seu nome\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Email</Form.Label>\n          <Form.Control value={formData.email} onChange={handleInputChange} name=\"email\" type=\"email\" placeholder=\"Seu email\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Senha</Form.Label>\n          <Form.Control value={formData.password} onChange={handleInputChange} name=\"password\" type=\"password\" placeholder=\"Senha\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Confirmação da Senha</Form.Label>\n          <Form.Control value={formData.passwordConfirmation} onChange={handleInputChange} name=\"passwordConfirmation\" type=\"password\" placeholder=\"Senha\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Unidade</Form.Label>\n          <Form.Control value={formData.unit} onChange={handleInputChange} name=\"unit\" type=\"text\" placeholder=\"Número do seu apartamento\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Senha do admin</Form.Label>\n          <Form.Control value={formData.adminPassword} onChange={handleInputChange} name=\"adminPassword\" type=\"password\" placeholder=\"Senha do admin\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          {\n            isLoading ? (\n              <Spinner animation=\"border\" variant=\"light\"/>\n            ) : (\n              <Button variant=\"primary\" type=\"button\" onClick={handleSignup}>\n                Cadastrar\n              </Button>\n            )\n          }\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Card, Button, Table } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport firebase from '../../config/firebase'\nimport moment from 'moment'\n\nimport './styles.css'\n\nfunction Home() {\n  const { user } = useSelector(state => state.user)\n  const [washOneHistory, setWashOneHistory] = useState([])\n  const [washTwoHistory, setWashTwoHistory] = useState([])\n  const [machineOneStatus, setMachineOneStatus] = useState(false)\n  const [machineTwoStatus, setMachineTwoStatus] = useState(false)\n  const history = useHistory()\n  const db = firebase.firestore()\n\n  const fetchHistoryFromMachineOne = useCallback(() => {\n    db.collection('washes').where('machine', '==', 1).get()\n      .then(query => {\n        if (query.docs.length) {\n          query.forEach(doc => {\n            db.collection('users').get().then(users => {\n              const user = users.docs.find(user => user.data().id === doc.data().user)\n              setWashOneHistory(oldState => {\n                return [\n                  ...oldState,\n                  {\n                    date: `${moment(doc.data().created.toDate()).format('DD/MM/YYYY')} as ${moment(doc.data().created.toDate()).format('HH:mm')}`,\n                    userParsed: user.data(),\n                    ...doc.data()\n                  }\n                ]\n              })\n            })\n          })\n        }\n      })\n  }, [db])\n\n  const fetchHistoryFromMachineTwo = useCallback(() => {\n    setWashTwoHistory([])\n    db.collection('washes').where('machine', '==', 2).get()\n      .then(query => {\n        if (query.docs.length) {\n          query.forEach(doc => {\n            db.collection('users').get().then(users => {\n              const user = users.docs.find(user => user.data().id === doc.data().user)\n              setWashTwoHistory(oldState => [\n                ...oldState,\n                {\n                  date: `${moment(doc.data().created.toDate()).format('DD/MM/YYYY')} as ${moment(doc.data().created.toDate()).format('HH:mm')}`,\n                  userParsed: user.data(),\n                  ...doc.data()\n                }\n              ])\n            })\n          })\n        }\n      })\n  }, [db])\n\n  const fecthMachinesStatus = useCallback(() => {\n    db.collection('machines').get().then(query => {\n      if(query.docs.length){\n        query.docs.forEach(machine => {\n          const machineData = machine.data()\n          if(machineData.code === 1){\n            setMachineOneStatus(machineData.in_use)\n          } else if (machineData.code === 2) {\n            setMachineTwoStatus(machineData.in_use)\n          }\n        })\n      }\n    })\n  }, [db])\n\n  useEffect(() => {\n    const unsubscribeWashes = db.collection('washes').onSnapshot(() => {\n      fetchHistoryFromMachineTwo()\n      fetchHistoryFromMachineOne()\n    })\n\n    const unsubscribeMachines = db.collection('machines').onSnapshot(() => {\n      fecthMachinesStatus()\n    })\n\n    return () => {\n      unsubscribeMachines()\n      unsubscribeWashes()\n    };\n  }, []);\n\n  return (\n    <div className=\"home-container pt-5\">\n      <div className=\"button-wash-container mb-3\">\n        <Button variant=\"success\" onClick={() => history.push('wash/start')}>Iniciar Lavagem</Button>\n      </div>\n\n      {\n        machineOneStatus && washOneHistory.find(wash => wash.user === user.id) ? (\n          <div className=\"button-wash-container mb-3\">\n            <Button variant=\"primary\" onClick={() => history.push('wash/pause/1')}>Parar Lavagem na Maquina 1</Button>\n          </div>\n        ) : null\n      }\n\n{\n        machineTwoStatus && washTwoHistory.find(wash => wash.user === user.id) ? (\n          <div className=\"button-wash-container mb-3\">\n            <Button variant=\"primary\" onClick={() => history.push('wash/pause/2')}>Parar Lavagem na Maquina 2</Button>\n          </div>\n        ) : null\n      }\n\n      <Card className=\"home-cards mx-auto\">\n      <Card.Header>Maquina 01 {machineOneStatus ? ' - Em uso' : ' - Disponível para uso'}</Card.Header>\n        <Card.Body>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th className=\"text-center\">Unidade</th>\n                <th className=\"text-center\">Data</th>\n                <th className=\"text-center\">Registro Inicial KWH</th>\n                <th className=\"text-center\">Registro Final KWH</th>\n                <th className=\"text-center\">Registro Inicial Hidrômetro</th>\n                <th className=\"text-center\">Registro Final Hidrômetro</th>\n                <th className=\"text-center\">Usuário</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                washOneHistory.length ? (\n                  washOneHistory.map((history, idx) => (\n                    <tr key={idx}>\n                      <td className=\"text-center\">{history.userParsed.unit}</td>\n                      <td className=\"text-center\">{history.date}</td>\n                      <td className=\"text-center\">{history.initial_kwh}</td>\n                      <td className=\"text-center\">{history.final_kwh || ''}</td>\n                      <td className=\"text-center\">{history.initial_water}</td>\n                      <td className=\"text-center\">{history.final_water || ''}</td>\n                      <td className=\"text-center\">{history.userParsed.name}</td>\n                    </tr>\n                  ))\n                ) : null\n              }\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n\n      <Card className=\"home-cards mx-auto mt-5\">\n        <Card.Header>Maquina 02 {machineTwoStatus ? ' - Em uso' : ' - Disponível para uso'}</Card.Header>\n        <Card.Body>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th className=\"text-center\">Unidade</th>\n                <th className=\"text-center\">Data</th>\n                <th className=\"text-center\">Registro Inicial KWH</th>\n                <th className=\"text-center\">Registro Final KWH</th>\n                <th className=\"text-center\">Registro Inicial Hidrômetro</th>\n                <th className=\"text-center\">Registro Final Hidrômetro</th>\n                <th className=\"text-center\">Usuário</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                washTwoHistory.map((history, idx) => (\n                  <tr key={idx}>\n                    <td className=\"text-center\">{history.userParsed.unit}</td>\n                    <td className=\"text-center\">{history.date}</td>\n                    <td className=\"text-center\">{history.initial_kwh}</td>\n                    <td className=\"text-center\">{history.final_kwh || ''}</td>\n                    <td className=\"text-center\">{history.initial_water}</td>\n                    <td className=\"text-center\">{history.final_water || ''}</td>\n                    <td className=\"text-center\">{history.userParsed.name}</td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport moment from 'moment'\n\nimport firebase from '../../config/firebase'\n\nimport { Form, Row, Button, Spinner } from 'react-bootstrap'\n\nfunction StartWash() {\n  const { user } = useSelector(state => state.user)\n  const db = firebase.firestore()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleStarWash = () => {\n    setIsLoading(true)\n    db.collection('washes').add({\n      initial_kwh: formData.final_kwh,\n      initial_water: formData.final_water,\n      user: user.id,\n      machine: parseInt(selectedMachine),\n      created: new Date(),\n    }).then(() => {\n      db.collection('machines').where('code', '==', parseInt(selectedMachine)).get()\n      .then(query => {\n        if(query.docs.length){\n          query.docs[0].ref.update({in_use: true})\n        }\n        setIsLoading(false)\n        toast.success('Lavagem iniciada com sucesso')\n\n        setTimeout(() => {\n          history.push('/home')\n        }, 1500)\n      }).catch(() => {\n        setIsLoading(false)\n      })\n    }).catch(() => {\n      setIsLoading(false)\n    })\n  }\n\n  const [formData, setFormData] = useState({\n    final_kwh: \"\",\n    final_water: \"\"\n  })\n  const [selectedMachine, setSelectedMachine] = useState(1)\n  const [machinesList, setMachinesList] = useState([])\n\n  const fetchMachinesList = useCallback(() => {\n    const machinesArray = []\n    db.collection('machines').get()\n      .then(query => {\n        if(query.docs.length){\n          query.docs.forEach(machine => {\n            machinesArray.push(machine.data())\n          })\n        }\n        setMachinesList(machinesArray)\n      })\n  }, [db])\n\n  useEffect(() => {\n    db.collection('washes').where('machine', '==', parseInt(selectedMachine)).orderBy('created', 'desc').limit(1).get()\n      .then(query => {\n        if(query.docs.length){\n          query.forEach(doc => {\n            setFormData(doc.data())\n          })\n        } else {\n          setFormData({\n            final_kwh: \"\",\n            final_water: \"\"\n          })\n        }\n      })\n  }, [selectedMachine, db])\n\n\n  useEffect(() => {\n    const unsubscribe = db.collection('machines').onSnapshot(() => {\n      fetchMachinesList()\n    })\n\n    return () => {\n      unsubscribe()\n    };\n  }, [db]);\n\n  return (\n    <div className=\"login-content d-flex align-items-center\">\n      <Form className=\"mx-auto\">\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Selecione o número da maquina</Form.Label>\n          <Form.Control value={selectedMachine} as=\"select\" onChange={(e) => setSelectedMachine(e.target.value)}>\n            {\n              machinesList.map(machine => (\n                <option key={machine.code} value={machine.code}> {machine.name} {machine.in_use ? '(em uso)' : '(livre)'}</option>\n              ))\n            }\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Data</Form.Label>\n          <Form.Control value={moment().format('DD/MM/YYYY HH:mm')} onChange={() => {}} name=\"created\" type=\"text\" disabled />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Registro Inicial KWH</Form.Label>\n          <Form.Control value={formData.final_kwh} onChange={() => {}} placeholder=\"Consumo inicial em KWH\" name=\"initial_kwh\" type=\"text\" disabled />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Registro Inicial Hidrômetro</Form.Label>\n          <Form.Control value={formData.final_water} onChange={() => {}} name=\"passwordConfirmation\" type=\"text\" disabled placeholder=\"Consumo inicial hidrômetro\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Usuário</Form.Label>\n          <Form.Control value={user.unit} onChange={() => {}}  name=\"unit\" type=\"text\" placeholder=\"Número do seu apartamento\" disabled/>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          {\n            isLoading ? (\n              <Spinner animation=\"border\" variant=\"light\"/>\n            ) : (\n              <Button variant=\"primary\" type=\"button\" onClick={handleStarWash}>\n                Confirmar Inicio\n              </Button>\n            )\n          }\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default StartWash;\n","import React, { useState } from 'react';\nimport { Form, Row, Button, Spinner } from 'react-bootstrap'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\n\n\nimport firebase from '../../config/firebase'\n\n\nfunction StartWash() {\n  const [isLoading, setIsLoading] = useState(false)\n  const history = useHistory()\n  const db = firebase.firestore()\n  const { id } = useParams()\n  const [formData, setFormData] = useState({\n    final_kwh: \"\",\n    final_water: \"\"\n  })\n\n  const handleStopWash = () => {\n    setIsLoading(true)\n    db.collection('washes').where('machine', '==', parseInt(id)).orderBy('created', 'desc').limit(1).get()\n    .then(query => {\n      if(query.docs.length){\n        query.docs[0].ref.update({\n          final_kwh: formData.final_kwh,\n          final_water: formData.final_water,\n          updated: new Date()\n        }).then(() => {\n          db.collection('machines').where('code', '==', parseInt(id)).get()\n          .then(query => {\n            if(query.docs.length){\n              query.docs[0].ref.update({in_use: false})\n            }\n            toast.success('Lavagem pausada com sucesso')\n            setTimeout(() => {\n              history.push('/home')\n            }, 1500)\n            setIsLoading(false)\n          }).catch(() => {\n            setIsLoading(false)\n          })\n        }).catch(() => {\n          setIsLoading(false)\n        })\n      }\n    })\n  }\n\n  return (\n    <div className=\"login-content d-flex\">\n      <Form className=\"mx-auto\">\n        <div className=\"mb-5\">\n          <h2 className=\"text-white\">Pausar Lavagem na Maquina {id}</h2>\n        </div>\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Registro Final KWH</Form.Label>\n          <Form.Control value={formData.final_kwh} onChange={(e) => setFormData({...formData, final_kwh: e.target.value})} placeholder=\"Consumo final em KWH\" type=\"text\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label className=\"text-white\">Registro Final Hidrômetro</Form.Label>\n          <Form.Control value={formData.final_water} onChange={(e) => setFormData({...formData, final_water: e.target.value})} type=\"text\" placeholder=\"Consumo final do hidrômetro\" />\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          {\n            isLoading ? (\n              <Spinner animation=\"border\" variant=\"light\"/>\n            ) : (\n              <Button variant=\"primary\" type=\"button\" onClick={handleStopWash}>\n                Confirmar Fim da Lavagem\n              </Button>\n            )\n          }\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default StartWash;\n","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Creators as UserActions } from '../store/ducks/user'\n\nimport Login from '../pages/Login'\nimport SignUp from '../pages/SignUp'\nimport Home from '../pages/Home'\nimport StartWash from '../pages/StartWash'\nimport PauseWash from '../pages/PauseWash'\n\nfunction Routes() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const user = localStorage.getItem('laundrySky@user')\n    if(user){\n      dispatch(UserActions.setUserData(JSON.parse(user)))\n    }\n\n  }, [dispatch])\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login/>\n      </Route>\n\n      <Route path=\"/signup\">\n        <SignUp/>\n      </Route>\n\n      <Route path=\"/home\">\n        <Home/>\n      </Route>\n\n      <Route path=\"/wash/start\">\n        <StartWash/>\n      </Route>\n\n      <Route path=\"/wash/pause/:id\">\n        <PauseWash/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import { BrowserRouter } from 'react-router-dom'\n\nimport Routes from './routes'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles/global.css'\n\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover/>\n      <BrowserRouter>\n        <Routes/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import Reactotron from 'reactotron-react-js'\nimport { reactotronRedux } from 'reactotron-redux'\n\nconst reactotron = Reactotron.configure({name: 'Laundry Sky Studios'})\n  .use(reactotronRedux())\n  .connect();\n\n // swizzle the old one\nconst yeOldeConsoleLog = console.log\n\n// make a new one\nconsole.log  = (...args) => {\n  // always call the old one, because React Native does magic swizzling too\n  yeOldeConsoleLog(...args)\n\n  // send this off to Reactotron.\n  Reactotron.display({\n    name: 'CONSOLE.LOG',\n    value: args,\n    preview: args.length > 0 && typeof args[0] === 'string' ? args[0] : null\n  })\n}\n\nexport default reactotron;\n","import { combineReducers } from 'redux'\nimport user from './user'\n\nexport default combineReducers({\n  user\n})\n","import { createStore } from 'redux'\nimport Reactotron from '../config/ReactotronConfig'\nimport reducers from './ducks'\n\nconst store = createStore(reducers, Reactotron.createEnhancer())\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}